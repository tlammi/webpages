{"version":3,"sources":["resources/band_placeholder.png","components/BandEntry.js","components/BandGrid.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","img","maxWidth","BandEntry","props","classes","link","placeHolder","Grid","item","container","justifyContent","xs","href","src","className","BandGrid","Math","floor","perLineXs","entries","i","max","push","spacing","leftAlign","backgroundColor","rightAlign","wallPaperContainer","wallPaper","animation","width","opacity","NewsGrid","HeaderBar","AppBar","position","Toolbar","Button","style","flex","Content","direction","Typography","align","variant","Sections","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c31a27bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/band_placeholder.f758ac6d.png\";","\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport placeHolder from \"../resources/band_placeholder.png\";\n\n\nconst defaultLink = \"https://www.youtube.com/watch?v=dQw4w9WgXcQ?autoplay=1\";\n\nconst useStyles = makeStyles({\n    img: {\n        maxWidth: \"100%\",\n    },\n});\n/*\n    Represents a band image on the page\n\n    props:\n        xs: xs forwarded to material-ui\n        img: image shown in the item. Default is a placeholder\n        link: Link where the image points to. A default is used if not specified.\n*/\nfunction BandEntry(props) {\n    const classes = useStyles();\n\n    const link = props.link ? props.link : defaultLink;\n    const img = props.img ? props.img : placeHolder;\n\n    return (\n        <Grid item container justifyContent=\"center\" xs={props.xs}>\n            <a href={link}>\n                <img src={img} className={classes.img} />\n            </a>\n        </Grid>\n    )\n}\n\n\nexport default BandEntry;\n","import { Grid } from \"@material-ui/core\";\nimport BandEntry from \"./BandEntry.js\";\n\n/*\n    Represent a grid of band images on a page\n\n    props:\n        perLineXs - How many entries are placed on a line. Extra small screen\n*/\nfunction BandGrid(props) {\n    const xs = Math.floor(12 / props.perLineXs);\n    const entries = [];\n    for (let i = 0; i < Math.max(props.perLineXs, 3); ++i) {\n        entries.push(<BandEntry xs={xs} />);\n    }\n    return (<Grid item container justifyContent=\"center\" spacing={4}>\n        {entries}\n    </Grid>);\n}\n\nexport default BandGrid;\n","import './App.css';\n\nimport { AppBar, Button, Grid, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport BandGrid from \"./components/BandGrid.js\";\nimport ReactMarkdown from 'react-markdown';\n\nconst NummiBigImg = 'https://www.nummirock.fi/2017/images/Etusivu_tausta_2021_desktop-C.jpg';\n\nconst useStyles = makeStyles(({\n  leftAlign: {\n    backgroundColor: \"yellow\",\n  },\n  rightAlign: {\n    backgroundColor: \"blue\",\n  },\n  wallPaperContainer: {\n    backgroundColor: \"black\",\n  },\n  wallPaper: {\n    animation: `$fadein 3s`,\n    width: \"100%\",\n  },\n  \"@keyframes fadein\": {\n    \"0%\": {\n      opacity: 0\n    },\n    \"100%\": {\n      opacity: 1\n    },\n  }\n}));\n\nfunction NewsGrid() {\n  return (\n    <Grid item container>\n      <Grid item xs={6}>\n        <ReactMarkdown>\n          # Good News Everyone!\n        </ReactMarkdown>\n        <ReactMarkdown>\n          Dacia Sandero will be available next September\n    </ReactMarkdown>\n      </Grid>\n      <Grid item xs={6}>\n        <ReactMarkdown>\n          # Oh no!\n        </ReactMarkdown>\n        <ReactMarkdown>\n          Dacia Sandero will be delayed till next year.\n      </ReactMarkdown>\n      </Grid>\n    </Grid>\n  )\n}\n\nfunction HeaderBar() {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Button><HomeIcon /></Button>\n        <div style={{ flex: 1 }}></div>\n        <Button>Uutiset</Button>\n        <Button>Ohjelma</Button>\n        <Button>Info</Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction Content() {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\">\n      <Grid item className={classes.wallPaperContainer}>\n        <img src={NummiBigImg} className={classes.wallPaper} />\n      </Grid>\n      <Grid item>\n        <Typography align=\"center\" variant=\"h1\">Ohjelma</Typography>\n      </Grid>\n      <BandGrid perLineXs={2} />\n      <BandGrid perLineXs={3} />\n      <BandGrid perLineXs={4} />\n      <Grid item>\n        <Typography align=\"center\" variant=\"h1\">Uutiset</Typography>\n      </Grid>\n      <NewsGrid />\n    </Grid>\n  )\n}\n\n// Left-right alignment\nfunction Sections() {\n  const classes = useStyles();\n  return (\n    <div>\n      <HeaderBar />\n      <Grid container direction=\"row\">\n        <Grid item xs={1} className={classes.leftAlign}>\n        </Grid>\n        <Grid item xs={10}>\n          <Content />\n        </Grid>\n        <Grid item xs={1} className={classes.rightAlign}>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Sections />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}